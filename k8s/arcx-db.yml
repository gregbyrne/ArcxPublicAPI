apiVersion: apps/v1
kind: Deployment
metadata:
  name: arcx-db
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: arcx-db

  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: arcx-db
      annotations:
        app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
        app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}

    spec:
      volumes:
        - name: arc-x-db-pod
          persistentVolumeClaim:
            claimName: arc-x-db
      containers:
      - name: postgres
        image: $CI_REGISTRY_IMAGE/db:$CI_COMMIT_SHORT_SHA
        imagePullPolicy: Always
        ports:
          - containerPort: 5432
        volumeMounts:
          - mountPath: "/var/lib/postgresql/data"
            name: arc-x-db-pod
        envFrom:
        - configMapRef:
            name: arcx-config
        env:
        - name: REDEPLOY_META
          value: $CI_JOB_ID-$CI_COMMIT_SHA
        livenessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 15
          periodSeconds: 15
        readinessProbe:
          tcpSocket:
            port: 5432
          initialDelaySeconds: 30
          periodSeconds: 10
      imagePullSecrets:
      - name: glcr-auth

---

apiVersion: v1
kind: Service
metadata:
  name: arcx-db-service
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
spec:
  ports:
  - port: 5432
  selector:
    app: arcx-db
